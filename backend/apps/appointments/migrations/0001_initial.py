# Generated by Django 4.2.7 on 2025-06-21 09:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("patients", "0001_initial"),
        ("doctors", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("appointment_id", models.CharField(max_length=20, unique=True)),
                ("appointment_date", models.DateField()),
                ("appointment_time", models.TimeField()),
                (
                    "duration",
                    models.IntegerField(
                        default=30,
                        help_text="Duration in minutes",
                        validators=[
                            django.core.validators.MinValueValidator(15),
                            django.core.validators.MaxValueValidator(480),
                        ],
                    ),
                ),
                (
                    "appointment_type",
                    models.CharField(
                        choices=[
                            ("consultation", "Consultation"),
                            ("follow_up", "Follow-up"),
                            ("checkup", "Regular Checkup"),
                            ("procedure", "Medical Procedure"),
                            ("surgery", "Surgery"),
                            ("emergency", "Emergency"),
                            ("telemedicine", "Telemedicine"),
                        ],
                        default="consultation",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("confirmed", "Confirmed"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("no_show", "No Show"),
                            ("rescheduled", "Rescheduled"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                            ("emergency", "Emergency"),
                        ],
                        default="normal",
                        max_length=20,
                    ),
                ),
                (
                    "chief_complaint",
                    models.TextField(
                        help_text="Patient's main concern or reason for visit"
                    ),
                ),
                ("symptoms", models.TextField(blank=True, null=True)),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes", null=True
                    ),
                ),
                ("is_follow_up", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("cancelled_at", models.DateTimeField(blank=True, null=True)),
                ("cancellation_reason", models.TextField(blank=True, null=True)),
                ("reminder_sent", models.BooleanField(default=False)),
                ("reminder_sent_at", models.DateTimeField(blank=True, null=True)),
                (
                    "cancelled_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="appointments_cancelled",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="appointments_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="appointments",
                        to="doctors.department",
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        limit_choices_to={"role": "doctor"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor_appointments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="patients.patient",
                    ),
                ),
                (
                    "previous_appointment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="follow_up_appointments",
                        to="appointments.appointment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Appointment",
                "verbose_name_plural": "Appointments",
                "db_table": "appointments_appointment",
                "ordering": ["appointment_date", "appointment_time"],
                "indexes": [
                    models.Index(
                        fields=["appointment_id"], name="appointment_appoint_962688_idx"
                    ),
                    models.Index(
                        fields=["patient", "appointment_date"],
                        name="appointment_patient_8037cd_idx",
                    ),
                    models.Index(
                        fields=["doctor", "appointment_date"],
                        name="appointment_doctor__4d4b79_idx",
                    ),
                    models.Index(
                        fields=["appointment_date", "appointment_time"],
                        name="appointment_appoint_c5b816_idx",
                    ),
                    models.Index(
                        fields=["status"], name="appointment_status_8fe9d7_idx"
                    ),
                    models.Index(
                        fields=["priority"], name="appointment_priorit_cb5826_idx"
                    ),
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="appointment",
            constraint=models.UniqueConstraint(
                condition=models.Q(
                    ("status__in", ["scheduled", "confirmed", "in_progress"])
                ),
                fields=("doctor", "appointment_date", "appointment_time"),
                name="unique_doctor_appointment_time",
            ),
        ),
    ]
