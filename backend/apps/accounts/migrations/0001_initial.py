# Generated by Django 4.2.7 on 2025-06-21 09:25

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Administrator"),
                            ("doctor", "Doctor"),
                            ("patient", "Patient"),
                            ("nurse", "Nurse"),
                            ("receptionist", "Receptionist"),
                            ("pharmacist", "Pharmacist"),
                        ],
                        default="patient",
                        help_text="User role in the hospital system",
                        max_length=20,
                    ),
                ),
                ("middle_name", models.CharField(blank=True, max_length=50, null=True)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Male"),
                            ("F", "Female"),
                            ("O", "Other"),
                            ("P", "Prefer not to say"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        help_text="Primary phone number",
                        max_length=128,
                        null=True,
                        region=None,
                    ),
                ),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "emergency_contact_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, null=True, region=None
                    ),
                ),
                (
                    "emergency_contact_relationship",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "address_line_1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "address_line_2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("state", models.CharField(blank=True, max_length=100, null=True)),
                ("postal_code", models.CharField(blank=True, max_length=20, null=True)),
                ("country", models.CharField(default="United States", max_length=100)),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        help_text="Profile picture (max 5MB)",
                        null=True,
                        upload_to="profile_pictures/",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True,
                        help_text="Brief biography or description",
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False, help_text="Email verification status"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_login_ip", models.GenericIPAddressField(blank=True, null=True)),
                ("preferred_language", models.CharField(default="en", max_length=10)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                ("receive_notifications", models.BooleanField(default=True)),
                ("receive_email_updates", models.BooleanField(default=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "accounts_user",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["role"], name="accounts_us_role_1fa9a5_idx"),
                    models.Index(fields=["email"], name="accounts_us_email_74c8d6_idx"),
                    models.Index(
                        fields=["is_active"], name="accounts_us_is_acti_a5841d_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="accounts_us_created_4734df_idx"
                    ),
                ],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
