# Automated Dependency Updates
# Keeps dependencies up-to-date with security patches and version updates

name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  # Update Python Dependencies
  update-python-deps:
    name: Update Python Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install pip-tools
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools

      - name: Update base requirements
        run: |
          cd backend/requirements
          pip-compile --upgrade base.in
          pip-compile --upgrade development.in
          pip-compile --upgrade production.in

      - name: Check for security vulnerabilities
        run: |
          cd backend
          pip install pip-audit
          pip-audit --requirement requirements/base.txt --format=json --output=security-audit.json
        continue-on-error: true

      - name: Create Pull Request for Python updates
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update Python dependencies'
          title: 'chore: Update Python Dependencies'
          body: |
            ## Python Dependency Updates
            
            This PR updates Python dependencies to their latest versions.
            
            ### Changes
            - Updated base requirements
            - Updated development requirements  
            - Updated production requirements
            
            ### Security
            - Security audit results attached
            
            Please review the changes and ensure all tests pass before merging.
          branch: update/python-dependencies
          delete-branch: true

  # Update Node.js Dependencies
  update-node-deps:
    name: Update Node.js Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Update dependencies
        run: |
          cd frontend
          npm update
          npm audit fix --audit-level=high

      - name: Run security audit
        run: |
          cd frontend
          npm audit --audit-level=moderate --json > npm-audit.json
        continue-on-error: true

      - name: Create Pull Request for Node.js updates
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update Node.js dependencies'
          title: 'chore: Update Node.js Dependencies'
          body: |
            ## Node.js Dependency Updates
            
            This PR updates Node.js dependencies to their latest versions.
            
            ### Changes
            - Updated package.json dependencies
            - Updated package-lock.json
            - Applied security fixes
            
            ### Security
            - NPM audit results attached
            
            Please review the changes and ensure all tests pass before merging.
          branch: update/nodejs-dependencies
          delete-branch: true

  # Update GitHub Actions
  update-github-actions:
    name: Update GitHub Actions
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update GitHub Actions versions
        uses: renovatebot/github-action@v39.2.3
        with:
          configurationFile: .github/renovate.json
          token: ${{ secrets.GITHUB_TOKEN }}

  # Security Vulnerability Scan
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'

      - name: Python security check
        run: |
          python -m pip install --upgrade pip
          pip install safety
          cd backend
          safety check --json --output safety-report.json
        continue-on-error: true

      - name: Node.js security check
        run: |
          cd frontend
          npm audit --audit-level=moderate

      - name: Upload security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            backend/safety-report.json
            frontend/npm-audit.json

  # Notify about updates
  notify-updates:
    name: Notify Updates
    runs-on: ubuntu-latest
    needs: [update-python-deps, update-node-deps, security-scan]
    if: always()
    
    steps:
      - name: Notify team about dependency updates
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              "text": "Dependency Update Summary",
              "attachments": [
                {
                  "color": "${{ needs.update-python-deps.result == 'success' && needs.update-node-deps.result == 'success' && 'good' || 'warning' }}",
                  "fields": [
                    {
                      "title": "Python Dependencies",
                      "value": "${{ needs.update-python-deps.result }}",
                      "short": true
                    },
                    {
                      "title": "Node.js Dependencies", 
                      "value": "${{ needs.update-node-deps.result }}",
                      "short": true
                    },
                    {
                      "title": "Security Scan",
                      "value": "${{ needs.security-scan.result }}",
                      "short": true
                    }
                  ]
                }
              ]
            }
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
